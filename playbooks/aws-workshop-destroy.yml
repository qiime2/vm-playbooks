---

- name: destroy AWS resources
  hosts: localhost
  connection: local
  vars_files:
    - ../group_vars/all
  tasks:
    - name: gather facts
      ec2_remote_facts:
        region: "{{ ec2_region }}"
        filters:
          instance.group-name: "{{ group_name }}"
      register: facts

    - name: destroy instances
      ec2:
        region: "{{ ec2_region }}"
        instance_id: "{{ item.id }}"
        state: absent
        wait: true
      with_items: "{{ facts.instances }}"

    # TODO: pull out into own
    - name: gather ebs facts
      ec2_vol_facts:
        region: "{{ ec2_region }}"
        filters:
          "tag:Name": "{{ workshop_name }}"
      register: ebs_facts

    - name: destroy ebs
      ec2_vol:
        region: "{{ ec2_region }}"
        id: "{{ item.id }}"
        state: absent
      with_items: "{{ ebs_facts.volumes }}"

    - name: destroy keypair
      ec2_key:
        name: "{{ workshop_name }}"
        region: "{{ ec2_region }}"
        state: absent
      register: key

    - name: destroy security groups
      ec2_group:
        region: "{{ ec2_region }}"
        name: "{{ item.name }}"
        description: "{{ item.desc }}"
        state: absent
      with_items: "{{ security_groups }}"

    - name: destroy vpc subnet
      ec2_vpc_subnet:
        region: "{{ ec2_region }}"
        vpc_id: "{{ item.vpc_id }}"
        cidr: "{{ vpc_cidr_block }}"
        state: absent
      with_items: "{{ facts.instances }}"
      register: subnets

    - name: destroy vpc route table
      ec2_vpc_route_table:
        region: "{{ ec2_region }}"
        vpc_id: "{{ item.item.vpc_id }}"
        tags:
            Name: "{{ item.item.tags.Name }}"
        state: absent
      with_items: "{{ subnets.results }}"

    - name: destroy vpc
      ec2_vpc:
        region: "{{ ec2_region }}"
        vpc_id: "{{ item.vpc_id }}"
        resource_tags:
          Name: "{{ workshop_name }}"
          Environment: "{{ workshop_name }}"
        state: absent
      with_items: "{{ facts.instances }}"
